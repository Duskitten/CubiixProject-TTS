[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://bvdhugo20s8ni"]

[sub_resource type="Gradient" id="Gradient_t8gej"]
offsets = PackedFloat32Array(0.436242, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_jhpac"]
frequency = 0.0166
offset = Vector3(-4.65, 0, 0)

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_1ghww"]
in_3d_space = true
seamless = true
bump_strength = 0.0
color_ramp = SubResource("Gradient_t8gej")
noise = SubResource("FastNoiseLite_jhpac")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ff0ed"]
output_port_for_preview = 0
texture = SubResource("NoiseTexture2D_1ghww")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8kaju"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_whkkh"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_vtx_2;



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_vtx_2, vec2(n_out3p0.xy));


// VectorOp:4
	vec3 n_out4p0 = n_out3p0 + vec3(n_out2p0.xyz);


// Output:0
	VERTEX = n_out4p0;


}
"
graph_offset = Vector2(-295.705, -0.863693)
nodes/vertex/0/position = Vector2(460, 160)
nodes/vertex/2/node = SubResource("VisualShaderNodeTexture_ff0ed")
nodes/vertex/2/position = Vector2(-42.0266, 199.317)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_8kaju")
nodes/vertex/3/position = Vector2(-400, 260)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorOp_whkkh")
nodes/vertex/4/position = Vector2(200, 120)
nodes/vertex/connections = PackedInt32Array(3, 0, 2, 0, 3, 0, 4, 0, 4, 0, 0, 0, 2, 0, 4, 1)
